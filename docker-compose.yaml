services:
  postgres:
    image: postgres:17
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5439:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ] 
      interval: 5s
      timeout: 5s
      retries: 5

  coursesapi:
    build: ./CoursesAPI
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: "Host=${DB_HOST};Port=${DB_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};"

      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_NAME: ${POSTGRES_DB}
      DB_PASSWORD: ${POSTGRES_PASSWORD}

    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["./entrypoint.sh"]

  frontend:
    build:
      context: ./Frontend
    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./certbot/conf:/etc/nginx/ssl:ro

    depends_on:
      coursesapi:
          condition: service_started

volumes:
  postgres_data: 

